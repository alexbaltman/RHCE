---
- hosts: all
  become: yes
  become_method: sudo
  tasks:
    - name: Check for ansible v2
      assert:
        that:
          - ansible_version.major == 2
        enabled: yes
    - name: Restart server
      command: /sbin/shutdown -r 1
      async: 0
      poll: 0
    - name: Wait for server to reboot
      local_action: wait_for host={{ ansible_ssh_host }} state=started delay=15 timeout=300
      become: false
    - name: Start nfs-client.target
      service:
        # on RHEL7.0 start: nfs-secure
        name: nfs-client.target
        state: started
        enabled: yes
    - name: Start nfs-secure
      service:
        name: nfs-secure
        state: started
        enabled: yes
    - name: Create dir /mnt/securenfs
      file:
        path: /mnt/securenfs
        state: directory
      when: ansible_hostname == "host2"
    # mount -t nfs4 -o vers=4.2,sec=krb5p,rw 192.168.6.6:/securenfs /mnt/securenfs
    - name: Mount securenfs
      mount:
        name: /mnt/securenfs
        src: 192.168.6.6:/securenfs
        fstype: nfs4
        state: present
        opts: _netdev,vers=4.2,sec=krb5p,rw
      when: ansible_hostname == "host2"
    - name: Mount all fstab entries
      command: mount -a
      when: ansible_hostname == "host2"
    - name: Create Kerberos ticket for user01
      shell: 'echo "user01" | kinit'
      become_user: user01
      when: ansible_hostname == "host2"
    - name: Create file on securenfs
      file:
        path: /mnt/securenfs/gradeit.txt
        state: touch
      become_user: user01
      when: ansible_hostname == "host2"
    - name: Check for gradeit.txt on host1 now
      stat:
        path: /securenfs/gradeit.txt
      register: st
      when: ansible_hostname == "host1"
    - fail:
        msg: "Expected /securenfs/gradeit.txt on host1, got {{ st }}"
      when: ansible_hostname == "host1" and st.stat.exists == false
    - debug:
        msg: "You Passed!!!!"
      when: ansible_hostname == "host2"
